# -*- coding: utf-8 -*-

# ==========================================
# üß† ACOMPANHAMENTO DE SA√öDE ‚Äì DATA ROBOT
# ==========================================
# Etapa 1: Registro e visualiza√ß√£o de dados
# ==========================================

# 1Ô∏è‚É£ Importa√ß√£o das bibliotecas b√°sicas
import pandas as pd
import datetime as dt
import matplotlib.pyplot as plt

# ==========================================
# 2Ô∏è‚É£ Estrutura inicial dos DataFrames
# ==========================================

# Criar tabelas vazias (voc√™ pode preencher manualmente ou importar CSV depois)
atividades = pd.DataFrame(columns=["data", "hora", "atividade", "dura√ß√£o_min", "intensidade", "observa√ß√µes"])
medicamentos = pd.DataFrame(columns=["data", "hora", "medicamento", "dose", "observa√ß√µes"])
humor = pd.DataFrame(columns=["data", "hora", "n√≠vel_humor", "observa√ß√µes"])
observacoes = pd.DataFrame(columns=["data", "hora", "anota√ß√£o"])
nutricao = pd.DataFrame(columns=["data", "hora", "refei√ß√£o", "calorias", "glicemia", "insulina", "observa√ß√µes"])

# ==========================================
# 3Ô∏è‚É£ Fun√ß√µes para inser√ß√£o manual
# ==========================================

def registrar_atividade(atividade, dura√ß√£o_min, intensidade, observa√ß√µes=""):
     try:
     global atividades
     agora = dt.datetime.now()
     novo = pd.DataFrame([{
     "data": agora.date(),
     "hora": agora.strftime("%H:%M"),
     "atividade": atividade,
     "dura√ß√£o_min": dura√ß√£o_min,
     "intensidade": intensidade,
     "observa√ß√µes": observa√ß√µes
     }])
     atividades = pd.concat([atividades, novo], ignore_index=True)
     print("‚úÖ Atividade registrada com sucesso!")
     except Exception as e:
         print(f'Erro: {e}')

def registrar_medicamento(medicamento, dose, observa√ß√µes=""):
     try:
     global medicamentos
     agora = dt.datetime.now()
     novo = pd.DataFrame([{
     "data": agora.date(),
     "hora": agora.strftime("%H:%M"),
     "medicamento": medicamento,
     "dose": dose,
     "observa√ß√µes": observa√ß√µes
     }])
     medicamentos = pd.concat([medicamentos, novo], ignore_index=True)
     print("üíä Registro de medicamento adicionado!")
     except Exception as e:
         print(f'Erro: {e}')

def registrar_humor(n√≠vel_humor, observa√ß√µes=""):
     try:
     global humor
     agora = dt.datetime.now()
     novo = pd.DataFrame([{
     "data": agora.date(),
     "hora": agora.strftime("%H:%M"),
     "n√≠vel_humor": n√≠vel_humor,
     "observa√ß√µes": observa√ß√µes
     }])
     humor = pd.concat([humor, novo], ignore_index=True)
     print("üôÇ Registro de humor adicionado!")
     except Exception as e:
         print(f'Erro: {e}')

def registrar_observacao(anota√ß√£o):
     try:
     global observacoes
     agora = dt.datetime.now()
     novo = pd.DataFrame([{
     "data": agora.date(),
     "hora": agora.strftime("%H:%M"),
     "anota√ß√£o": anota√ß√£o
     }])
     observacoes = pd.concat([observacoes, novo], ignore_index=True)
     print("üìù Observa√ß√£o registrada!")
     except Exception as e:
         print(f'Erro: {e}')

def registrar_refeicao(refei√ß√£o, calorias, glicemia=None, insulina=None, observa√ß√µes=""):
     try:
     global nutricao
     agora = dt.datetime.now()
     novo = pd.DataFrame([{
     "data": agora.date(),
     "hora": agora.strftime("%H:%M"),
     "refei√ß√£o": refei√ß√£o,
     "calorias": calorias,
     "glicemia": glicemia,
     "insulina": insulina,
     "observa√ß√µes": observa√ß√µes
     }])
     nutricao = pd.concat([nutricao, novo], ignore_index=True)
     print("üçΩÔ∏è Refei√ß√£o registrada!")
     except Exception as e:
         print(f'Erro: {e}')

